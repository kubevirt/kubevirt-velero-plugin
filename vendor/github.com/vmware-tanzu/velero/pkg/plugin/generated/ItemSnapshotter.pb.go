// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: ItemSnapshotter.proto

package generated

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ItemSnapshotterAppliesToRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin string `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
}

func (x *ItemSnapshotterAppliesToRequest) Reset() {
	*x = ItemSnapshotterAppliesToRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSnapshotterAppliesToRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSnapshotterAppliesToRequest) ProtoMessage() {}

func (x *ItemSnapshotterAppliesToRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSnapshotterAppliesToRequest.ProtoReflect.Descriptor instead.
func (*ItemSnapshotterAppliesToRequest) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{0}
}

func (x *ItemSnapshotterAppliesToRequest) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

type ItemSnapshotterAppliesToResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceSelector *ResourceSelector `protobuf:"bytes,1,opt,name=ResourceSelector,proto3" json:"ResourceSelector,omitempty"`
}

func (x *ItemSnapshotterAppliesToResponse) Reset() {
	*x = ItemSnapshotterAppliesToResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSnapshotterAppliesToResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSnapshotterAppliesToResponse) ProtoMessage() {}

func (x *ItemSnapshotterAppliesToResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSnapshotterAppliesToResponse.ProtoReflect.Descriptor instead.
func (*ItemSnapshotterAppliesToResponse) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{1}
}

func (x *ItemSnapshotterAppliesToResponse) GetResourceSelector() *ResourceSelector {
	if x != nil {
		return x.ResourceSelector
	}
	return nil
}

type AlsoHandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin string `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Item   []byte `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Backup []byte `protobuf:"bytes,3,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (x *AlsoHandlesRequest) Reset() {
	*x = AlsoHandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlsoHandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlsoHandlesRequest) ProtoMessage() {}

func (x *AlsoHandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlsoHandlesRequest.ProtoReflect.Descriptor instead.
func (*AlsoHandlesRequest) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{2}
}

func (x *AlsoHandlesRequest) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *AlsoHandlesRequest) GetItem() []byte {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *AlsoHandlesRequest) GetBackup() []byte {
	if x != nil {
		return x.Backup
	}
	return nil
}

type AlsoHandlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HandledItems []*ResourceIdentifier `protobuf:"bytes,1,rep,name=handledItems,proto3" json:"handledItems,omitempty"`
}

func (x *AlsoHandlesResponse) Reset() {
	*x = AlsoHandlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlsoHandlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlsoHandlesResponse) ProtoMessage() {}

func (x *AlsoHandlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlsoHandlesResponse.ProtoReflect.Descriptor instead.
func (*AlsoHandlesResponse) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{3}
}

func (x *AlsoHandlesResponse) GetHandledItems() []*ResourceIdentifier {
	if x != nil {
		return x.HandledItems
	}
	return nil
}

type SnapshotItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin string            `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Item   []byte            `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Params map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Backup []byte            `protobuf:"bytes,4,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (x *SnapshotItemRequest) Reset() {
	*x = SnapshotItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotItemRequest) ProtoMessage() {}

func (x *SnapshotItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotItemRequest.ProtoReflect.Descriptor instead.
func (*SnapshotItemRequest) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{4}
}

func (x *SnapshotItemRequest) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *SnapshotItemRequest) GetItem() []byte {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *SnapshotItemRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SnapshotItemRequest) GetBackup() []byte {
	if x != nil {
		return x.Backup
	}
	return nil
}

type SnapshotItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item             []byte                `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	SnapshotID       string                `protobuf:"bytes,2,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	SnapshotMetadata map[string]string     `protobuf:"bytes,3,rep,name=snapshotMetadata,proto3" json:"snapshotMetadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AdditionalItems  []*ResourceIdentifier `protobuf:"bytes,4,rep,name=additionalItems,proto3" json:"additionalItems,omitempty"`
	HandledItems     []*ResourceIdentifier `protobuf:"bytes,5,rep,name=handledItems,proto3" json:"handledItems,omitempty"`
}

func (x *SnapshotItemResponse) Reset() {
	*x = SnapshotItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotItemResponse) ProtoMessage() {}

func (x *SnapshotItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotItemResponse.ProtoReflect.Descriptor instead.
func (*SnapshotItemResponse) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{5}
}

func (x *SnapshotItemResponse) GetItem() []byte {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *SnapshotItemResponse) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *SnapshotItemResponse) GetSnapshotMetadata() map[string]string {
	if x != nil {
		return x.SnapshotMetadata
	}
	return nil
}

func (x *SnapshotItemResponse) GetAdditionalItems() []*ResourceIdentifier {
	if x != nil {
		return x.AdditionalItems
	}
	return nil
}

func (x *SnapshotItemResponse) GetHandledItems() []*ResourceIdentifier {
	if x != nil {
		return x.HandledItems
	}
	return nil
}

type ProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin     string              `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	ItemID     *ResourceIdentifier `protobuf:"bytes,2,opt,name=itemID,proto3" json:"itemID,omitempty"`
	SnapshotID string              `protobuf:"bytes,3,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	Backup     []byte              `protobuf:"bytes,4,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (x *ProgressRequest) Reset() {
	*x = ProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressRequest) ProtoMessage() {}

func (x *ProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressRequest.ProtoReflect.Descriptor instead.
func (*ProgressRequest) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{6}
}

func (x *ProgressRequest) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *ProgressRequest) GetItemID() *ResourceIdentifier {
	if x != nil {
		return x.ItemID
	}
	return nil
}

func (x *ProgressRequest) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *ProgressRequest) GetBackup() []byte {
	if x != nil {
		return x.Backup
	}
	return nil
}

type ProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase           string `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
	ItemsCompleted  int64  `protobuf:"varint,2,opt,name=itemsCompleted,proto3" json:"itemsCompleted,omitempty"`
	ItemsToComplete int64  `protobuf:"varint,3,opt,name=itemsToComplete,proto3" json:"itemsToComplete,omitempty"`
	Started         int64  `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
	StartedNano     int64  `protobuf:"varint,5,opt,name=startedNano,proto3" json:"startedNano,omitempty"`
	Updated         int64  `protobuf:"varint,6,opt,name=updated,proto3" json:"updated,omitempty"`
	UpdatedNano     int64  `protobuf:"varint,7,opt,name=updatedNano,proto3" json:"updatedNano,omitempty"`
	Err             string `protobuf:"bytes,8,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ProgressResponse) Reset() {
	*x = ProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressResponse) ProtoMessage() {}

func (x *ProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressResponse.ProtoReflect.Descriptor instead.
func (*ProgressResponse) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{7}
}

func (x *ProgressResponse) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *ProgressResponse) GetItemsCompleted() int64 {
	if x != nil {
		return x.ItemsCompleted
	}
	return 0
}

func (x *ProgressResponse) GetItemsToComplete() int64 {
	if x != nil {
		return x.ItemsToComplete
	}
	return 0
}

func (x *ProgressResponse) GetStarted() int64 {
	if x != nil {
		return x.Started
	}
	return 0
}

func (x *ProgressResponse) GetStartedNano() int64 {
	if x != nil {
		return x.StartedNano
	}
	return 0
}

func (x *ProgressResponse) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

func (x *ProgressResponse) GetUpdatedNano() int64 {
	if x != nil {
		return x.UpdatedNano
	}
	return 0
}

func (x *ProgressResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type DeleteItemSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin         string            `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	SnapshotID     string            `protobuf:"bytes,2,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	ItemFromBackup []byte            `protobuf:"bytes,3,opt,name=itemFromBackup,proto3" json:"itemFromBackup,omitempty"`
	Metadata       map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Params         map[string]string `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeleteItemSnapshotRequest) Reset() {
	*x = DeleteItemSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteItemSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItemSnapshotRequest) ProtoMessage() {}

func (x *DeleteItemSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItemSnapshotRequest.ProtoReflect.Descriptor instead.
func (*DeleteItemSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteItemSnapshotRequest) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *DeleteItemSnapshotRequest) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *DeleteItemSnapshotRequest) GetItemFromBackup() []byte {
	if x != nil {
		return x.ItemFromBackup
	}
	return nil
}

func (x *DeleteItemSnapshotRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DeleteItemSnapshotRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type CreateItemFromSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin           string            `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Item             []byte            `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	SnapshotID       string            `protobuf:"bytes,3,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	ItemFromBackup   []byte            `protobuf:"bytes,4,opt,name=itemFromBackup,proto3" json:"itemFromBackup,omitempty"`
	SnapshotMetadata map[string]string `protobuf:"bytes,5,rep,name=snapshotMetadata,proto3" json:"snapshotMetadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Params           map[string]string `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Restore          []byte            `protobuf:"bytes,7,opt,name=restore,proto3" json:"restore,omitempty"`
}

func (x *CreateItemFromSnapshotRequest) Reset() {
	*x = CreateItemFromSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemFromSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemFromSnapshotRequest) ProtoMessage() {}

func (x *CreateItemFromSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemFromSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateItemFromSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{9}
}

func (x *CreateItemFromSnapshotRequest) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *CreateItemFromSnapshotRequest) GetItem() []byte {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CreateItemFromSnapshotRequest) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *CreateItemFromSnapshotRequest) GetItemFromBackup() []byte {
	if x != nil {
		return x.ItemFromBackup
	}
	return nil
}

func (x *CreateItemFromSnapshotRequest) GetSnapshotMetadata() map[string]string {
	if x != nil {
		return x.SnapshotMetadata
	}
	return nil
}

func (x *CreateItemFromSnapshotRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateItemFromSnapshotRequest) GetRestore() []byte {
	if x != nil {
		return x.Restore
	}
	return nil
}

type CreateItemFromSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item            []byte                `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	AdditionalItems []*ResourceIdentifier `protobuf:"bytes,2,rep,name=additionalItems,proto3" json:"additionalItems,omitempty"`
	SkipRestore     bool                  `protobuf:"varint,3,opt,name=skipRestore,proto3" json:"skipRestore,omitempty"`
}

func (x *CreateItemFromSnapshotResponse) Reset() {
	*x = CreateItemFromSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItemFromSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItemFromSnapshotResponse) ProtoMessage() {}

func (x *CreateItemFromSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItemFromSnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateItemFromSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{10}
}

func (x *CreateItemFromSnapshotResponse) GetItem() []byte {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CreateItemFromSnapshotResponse) GetAdditionalItems() []*ResourceIdentifier {
	if x != nil {
		return x.AdditionalItems
	}
	return nil
}

func (x *CreateItemFromSnapshotResponse) GetSkipRestore() bool {
	if x != nil {
		return x.SkipRestore
	}
	return false
}

type ItemSnapshotterInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin string            `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Config map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ItemSnapshotterInitRequest) Reset() {
	*x = ItemSnapshotterInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ItemSnapshotter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSnapshotterInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSnapshotterInitRequest) ProtoMessage() {}

func (x *ItemSnapshotterInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ItemSnapshotter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSnapshotterInitRequest.ProtoReflect.Descriptor instead.
func (*ItemSnapshotterInitRequest) Descriptor() ([]byte, []int) {
	return file_ItemSnapshotter_proto_rawDescGZIP(), []int{11}
}

func (x *ItemSnapshotterInitRequest) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *ItemSnapshotterInitRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_ItemSnapshotter_proto protoreflect.FileDescriptor

var file_ItemSnapshotter_proto_rawDesc = []byte{
	0x0a, 0x15, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x1a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x39, 0x0a, 0x1f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0x6b, 0x0a, 0x20, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x58, 0x0a, 0x12, 0x41, 0x6c, 0x73, 0x6f,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x22, 0x58, 0x0a, 0x13, 0x41, 0x6c, 0x73, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0c,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd8, 0x01, 0x0a,
	0x13, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x42, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x39, 0x0a, 0x0b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfe, 0x02, 0x0a, 0x14, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x49, 0x44, 0x12, 0x61, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x41, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x43, 0x0a, 0x15, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x22, 0x84, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x54,
	0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x8d, 0x03, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x72,
	0x6f, 0x6d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x4e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe7, 0x03, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x46, 0x72, 0x6f, 0x6d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x12, 0x6a, 0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x1a, 0x43, 0x0a, 0x15, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x9f, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x47, 0x0a, 0x0f, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x1a, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x49, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x32, 0xd5, 0x04, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12,
	0x25, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x54, 0x6f, 0x12, 0x2a, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x0b, 0x41, 0x6c, 0x73, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x6c, 0x73, 0x6f, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x41, 0x6c, 0x73, 0x6f, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0c,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x24, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6d, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x28, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f,
	0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x2d, 0x74, 0x61, 0x6e, 0x7a, 0x75, 0x2f, 0x76, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ItemSnapshotter_proto_rawDescOnce sync.Once
	file_ItemSnapshotter_proto_rawDescData = file_ItemSnapshotter_proto_rawDesc
)

func file_ItemSnapshotter_proto_rawDescGZIP() []byte {
	file_ItemSnapshotter_proto_rawDescOnce.Do(func() {
		file_ItemSnapshotter_proto_rawDescData = protoimpl.X.CompressGZIP(file_ItemSnapshotter_proto_rawDescData)
	})
	return file_ItemSnapshotter_proto_rawDescData
}

var file_ItemSnapshotter_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_ItemSnapshotter_proto_goTypes = []interface{}{
	(*ItemSnapshotterAppliesToRequest)(nil),  // 0: generated.ItemSnapshotterAppliesToRequest
	(*ItemSnapshotterAppliesToResponse)(nil), // 1: generated.ItemSnapshotterAppliesToResponse
	(*AlsoHandlesRequest)(nil),               // 2: generated.AlsoHandlesRequest
	(*AlsoHandlesResponse)(nil),              // 3: generated.AlsoHandlesResponse
	(*SnapshotItemRequest)(nil),              // 4: generated.SnapshotItemRequest
	(*SnapshotItemResponse)(nil),             // 5: generated.SnapshotItemResponse
	(*ProgressRequest)(nil),                  // 6: generated.ProgressRequest
	(*ProgressResponse)(nil),                 // 7: generated.ProgressResponse
	(*DeleteItemSnapshotRequest)(nil),        // 8: generated.DeleteItemSnapshotRequest
	(*CreateItemFromSnapshotRequest)(nil),    // 9: generated.CreateItemFromSnapshotRequest
	(*CreateItemFromSnapshotResponse)(nil),   // 10: generated.CreateItemFromSnapshotResponse
	(*ItemSnapshotterInitRequest)(nil),       // 11: generated.ItemSnapshotterInitRequest
	nil,                                      // 12: generated.SnapshotItemRequest.ParamsEntry
	nil,                                      // 13: generated.SnapshotItemResponse.SnapshotMetadataEntry
	nil,                                      // 14: generated.DeleteItemSnapshotRequest.MetadataEntry
	nil,                                      // 15: generated.DeleteItemSnapshotRequest.ParamsEntry
	nil,                                      // 16: generated.CreateItemFromSnapshotRequest.SnapshotMetadataEntry
	nil,                                      // 17: generated.CreateItemFromSnapshotRequest.ParamsEntry
	nil,                                      // 18: generated.ItemSnapshotterInitRequest.ConfigEntry
	(*ResourceSelector)(nil),                 // 19: generated.ResourceSelector
	(*ResourceIdentifier)(nil),               // 20: generated.ResourceIdentifier
	(*Empty)(nil),                            // 21: generated.Empty
}
var file_ItemSnapshotter_proto_depIdxs = []int32{
	19, // 0: generated.ItemSnapshotterAppliesToResponse.ResourceSelector:type_name -> generated.ResourceSelector
	20, // 1: generated.AlsoHandlesResponse.handledItems:type_name -> generated.ResourceIdentifier
	12, // 2: generated.SnapshotItemRequest.params:type_name -> generated.SnapshotItemRequest.ParamsEntry
	13, // 3: generated.SnapshotItemResponse.snapshotMetadata:type_name -> generated.SnapshotItemResponse.SnapshotMetadataEntry
	20, // 4: generated.SnapshotItemResponse.additionalItems:type_name -> generated.ResourceIdentifier
	20, // 5: generated.SnapshotItemResponse.handledItems:type_name -> generated.ResourceIdentifier
	20, // 6: generated.ProgressRequest.itemID:type_name -> generated.ResourceIdentifier
	14, // 7: generated.DeleteItemSnapshotRequest.metadata:type_name -> generated.DeleteItemSnapshotRequest.MetadataEntry
	15, // 8: generated.DeleteItemSnapshotRequest.params:type_name -> generated.DeleteItemSnapshotRequest.ParamsEntry
	16, // 9: generated.CreateItemFromSnapshotRequest.snapshotMetadata:type_name -> generated.CreateItemFromSnapshotRequest.SnapshotMetadataEntry
	17, // 10: generated.CreateItemFromSnapshotRequest.params:type_name -> generated.CreateItemFromSnapshotRequest.ParamsEntry
	20, // 11: generated.CreateItemFromSnapshotResponse.additionalItems:type_name -> generated.ResourceIdentifier
	18, // 12: generated.ItemSnapshotterInitRequest.config:type_name -> generated.ItemSnapshotterInitRequest.ConfigEntry
	11, // 13: generated.ItemSnapshotter.Init:input_type -> generated.ItemSnapshotterInitRequest
	0,  // 14: generated.ItemSnapshotter.AppliesTo:input_type -> generated.ItemSnapshotterAppliesToRequest
	2,  // 15: generated.ItemSnapshotter.AlsoHandles:input_type -> generated.AlsoHandlesRequest
	4,  // 16: generated.ItemSnapshotter.SnapshotItem:input_type -> generated.SnapshotItemRequest
	6,  // 17: generated.ItemSnapshotter.Progress:input_type -> generated.ProgressRequest
	8,  // 18: generated.ItemSnapshotter.DeleteSnapshot:input_type -> generated.DeleteItemSnapshotRequest
	9,  // 19: generated.ItemSnapshotter.CreateItemFromSnapshot:input_type -> generated.CreateItemFromSnapshotRequest
	21, // 20: generated.ItemSnapshotter.Init:output_type -> generated.Empty
	1,  // 21: generated.ItemSnapshotter.AppliesTo:output_type -> generated.ItemSnapshotterAppliesToResponse
	3,  // 22: generated.ItemSnapshotter.AlsoHandles:output_type -> generated.AlsoHandlesResponse
	5,  // 23: generated.ItemSnapshotter.SnapshotItem:output_type -> generated.SnapshotItemResponse
	7,  // 24: generated.ItemSnapshotter.Progress:output_type -> generated.ProgressResponse
	21, // 25: generated.ItemSnapshotter.DeleteSnapshot:output_type -> generated.Empty
	10, // 26: generated.ItemSnapshotter.CreateItemFromSnapshot:output_type -> generated.CreateItemFromSnapshotResponse
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_ItemSnapshotter_proto_init() }
func file_ItemSnapshotter_proto_init() {
	if File_ItemSnapshotter_proto != nil {
		return
	}
	file_Shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ItemSnapshotter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSnapshotterAppliesToRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSnapshotterAppliesToResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlsoHandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlsoHandlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteItemSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemFromSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItemFromSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ItemSnapshotter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSnapshotterInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ItemSnapshotter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ItemSnapshotter_proto_goTypes,
		DependencyIndexes: file_ItemSnapshotter_proto_depIdxs,
		MessageInfos:      file_ItemSnapshotter_proto_msgTypes,
	}.Build()
	File_ItemSnapshotter_proto = out.File
	file_ItemSnapshotter_proto_rawDesc = nil
	file_ItemSnapshotter_proto_goTypes = nil
	file_ItemSnapshotter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ItemSnapshotterClient is the client API for ItemSnapshotter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ItemSnapshotterClient interface {
	Init(ctx context.Context, in *ItemSnapshotterInitRequest, opts ...grpc.CallOption) (*Empty, error)
	AppliesTo(ctx context.Context, in *ItemSnapshotterAppliesToRequest, opts ...grpc.CallOption) (*ItemSnapshotterAppliesToResponse, error)
	AlsoHandles(ctx context.Context, in *AlsoHandlesRequest, opts ...grpc.CallOption) (*AlsoHandlesResponse, error)
	SnapshotItem(ctx context.Context, in *SnapshotItemRequest, opts ...grpc.CallOption) (*SnapshotItemResponse, error)
	Progress(ctx context.Context, in *ProgressRequest, opts ...grpc.CallOption) (*ProgressResponse, error)
	DeleteSnapshot(ctx context.Context, in *DeleteItemSnapshotRequest, opts ...grpc.CallOption) (*Empty, error)
	CreateItemFromSnapshot(ctx context.Context, in *CreateItemFromSnapshotRequest, opts ...grpc.CallOption) (*CreateItemFromSnapshotResponse, error)
}

type itemSnapshotterClient struct {
	cc grpc.ClientConnInterface
}

func NewItemSnapshotterClient(cc grpc.ClientConnInterface) ItemSnapshotterClient {
	return &itemSnapshotterClient{cc}
}

func (c *itemSnapshotterClient) Init(ctx context.Context, in *ItemSnapshotterInitRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/generated.ItemSnapshotter/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemSnapshotterClient) AppliesTo(ctx context.Context, in *ItemSnapshotterAppliesToRequest, opts ...grpc.CallOption) (*ItemSnapshotterAppliesToResponse, error) {
	out := new(ItemSnapshotterAppliesToResponse)
	err := c.cc.Invoke(ctx, "/generated.ItemSnapshotter/AppliesTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemSnapshotterClient) AlsoHandles(ctx context.Context, in *AlsoHandlesRequest, opts ...grpc.CallOption) (*AlsoHandlesResponse, error) {
	out := new(AlsoHandlesResponse)
	err := c.cc.Invoke(ctx, "/generated.ItemSnapshotter/AlsoHandles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemSnapshotterClient) SnapshotItem(ctx context.Context, in *SnapshotItemRequest, opts ...grpc.CallOption) (*SnapshotItemResponse, error) {
	out := new(SnapshotItemResponse)
	err := c.cc.Invoke(ctx, "/generated.ItemSnapshotter/SnapshotItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemSnapshotterClient) Progress(ctx context.Context, in *ProgressRequest, opts ...grpc.CallOption) (*ProgressResponse, error) {
	out := new(ProgressResponse)
	err := c.cc.Invoke(ctx, "/generated.ItemSnapshotter/Progress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemSnapshotterClient) DeleteSnapshot(ctx context.Context, in *DeleteItemSnapshotRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/generated.ItemSnapshotter/DeleteSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemSnapshotterClient) CreateItemFromSnapshot(ctx context.Context, in *CreateItemFromSnapshotRequest, opts ...grpc.CallOption) (*CreateItemFromSnapshotResponse, error) {
	out := new(CreateItemFromSnapshotResponse)
	err := c.cc.Invoke(ctx, "/generated.ItemSnapshotter/CreateItemFromSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ItemSnapshotterServer is the server API for ItemSnapshotter service.
type ItemSnapshotterServer interface {
	Init(context.Context, *ItemSnapshotterInitRequest) (*Empty, error)
	AppliesTo(context.Context, *ItemSnapshotterAppliesToRequest) (*ItemSnapshotterAppliesToResponse, error)
	AlsoHandles(context.Context, *AlsoHandlesRequest) (*AlsoHandlesResponse, error)
	SnapshotItem(context.Context, *SnapshotItemRequest) (*SnapshotItemResponse, error)
	Progress(context.Context, *ProgressRequest) (*ProgressResponse, error)
	DeleteSnapshot(context.Context, *DeleteItemSnapshotRequest) (*Empty, error)
	CreateItemFromSnapshot(context.Context, *CreateItemFromSnapshotRequest) (*CreateItemFromSnapshotResponse, error)
}

// UnimplementedItemSnapshotterServer can be embedded to have forward compatible implementations.
type UnimplementedItemSnapshotterServer struct {
}

func (*UnimplementedItemSnapshotterServer) Init(context.Context, *ItemSnapshotterInitRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Init not implemented")
}
func (*UnimplementedItemSnapshotterServer) AppliesTo(context.Context, *ItemSnapshotterAppliesToRequest) (*ItemSnapshotterAppliesToResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppliesTo not implemented")
}
func (*UnimplementedItemSnapshotterServer) AlsoHandles(context.Context, *AlsoHandlesRequest) (*AlsoHandlesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlsoHandles not implemented")
}
func (*UnimplementedItemSnapshotterServer) SnapshotItem(context.Context, *SnapshotItemRequest) (*SnapshotItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SnapshotItem not implemented")
}
func (*UnimplementedItemSnapshotterServer) Progress(context.Context, *ProgressRequest) (*ProgressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Progress not implemented")
}
func (*UnimplementedItemSnapshotterServer) DeleteSnapshot(context.Context, *DeleteItemSnapshotRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSnapshot not implemented")
}
func (*UnimplementedItemSnapshotterServer) CreateItemFromSnapshot(context.Context, *CreateItemFromSnapshotRequest) (*CreateItemFromSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItemFromSnapshot not implemented")
}

func RegisterItemSnapshotterServer(s *grpc.Server, srv ItemSnapshotterServer) {
	s.RegisterService(&_ItemSnapshotter_serviceDesc, srv)
}

func _ItemSnapshotter_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemSnapshotterInitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSnapshotterServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.ItemSnapshotter/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSnapshotterServer).Init(ctx, req.(*ItemSnapshotterInitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemSnapshotter_AppliesTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemSnapshotterAppliesToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSnapshotterServer).AppliesTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.ItemSnapshotter/AppliesTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSnapshotterServer).AppliesTo(ctx, req.(*ItemSnapshotterAppliesToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemSnapshotter_AlsoHandles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlsoHandlesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSnapshotterServer).AlsoHandles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.ItemSnapshotter/AlsoHandles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSnapshotterServer).AlsoHandles(ctx, req.(*AlsoHandlesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemSnapshotter_SnapshotItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSnapshotterServer).SnapshotItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.ItemSnapshotter/SnapshotItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSnapshotterServer).SnapshotItem(ctx, req.(*SnapshotItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemSnapshotter_Progress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProgressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSnapshotterServer).Progress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.ItemSnapshotter/Progress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSnapshotterServer).Progress(ctx, req.(*ProgressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemSnapshotter_DeleteSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteItemSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSnapshotterServer).DeleteSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.ItemSnapshotter/DeleteSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSnapshotterServer).DeleteSnapshot(ctx, req.(*DeleteItemSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ItemSnapshotter_CreateItemFromSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateItemFromSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemSnapshotterServer).CreateItemFromSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.ItemSnapshotter/CreateItemFromSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemSnapshotterServer).CreateItemFromSnapshot(ctx, req.(*CreateItemFromSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ItemSnapshotter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.ItemSnapshotter",
	HandlerType: (*ItemSnapshotterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _ItemSnapshotter_Init_Handler,
		},
		{
			MethodName: "AppliesTo",
			Handler:    _ItemSnapshotter_AppliesTo_Handler,
		},
		{
			MethodName: "AlsoHandles",
			Handler:    _ItemSnapshotter_AlsoHandles_Handler,
		},
		{
			MethodName: "SnapshotItem",
			Handler:    _ItemSnapshotter_SnapshotItem_Handler,
		},
		{
			MethodName: "Progress",
			Handler:    _ItemSnapshotter_Progress_Handler,
		},
		{
			MethodName: "DeleteSnapshot",
			Handler:    _ItemSnapshotter_DeleteSnapshot_Handler,
		},
		{
			MethodName: "CreateItemFromSnapshot",
			Handler:    _ItemSnapshotter_CreateItemFromSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ItemSnapshotter.proto",
}
